<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- ======================== AUTHENTICATION ======================= -->
	<bean id="authenticationManager"
		class="org.springframework.security.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref local="ldapAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<!-- Real LDAP/ActiveDirectory server. Enter url, root, userDn, password in ldap.properties to run the test. -->
	<bean id="_securityContextSource"
		class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<constructor-arg value="$HasEncryptedPasswords{ldap.url}/$HasEncryptedPasswords{ldap.root}" />
		<!-- Manager userDn and password. Optional: your LDAP server allows anonymous binding. -->
		<property name="userDn" value="$HasEncryptedPasswords{ldap.userDn}" />
		<property name="password" value="$HasEncryptedPasswords{ldap.password}" />
		<!-- Active Directory server search fails without java.naming.referral property. -->
		<property name="baseEnvironmentProperties">
			<map>
				<entry>
					<key>
						<value>java.naming.referral</value>
					</key>
					<value>follow</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="userSearch"
		class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		<constructor-arg index="0" value="" />
		<constructor-arg index="1" value="(sAMAccountName={0})" />
		<constructor-arg index="2" ref="_securityContextSource" />
	</bean>

	<bean id="ldapAuthenticationProvider"
		class="org.springframework.security.providers.ldap.LdapAuthenticationProvider"
		p:userDetailsContextMapper-ref="userDetailsContextMapper">
		<constructor-arg>
			<bean
				class="org.springframework.security.providers.ldap.authenticator.BindAuthenticator"
				p:userSearch-ref="userSearch">
				<constructor-arg ref="_securityContextSource" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean
				class="org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator">
				<constructor-arg ref="_securityContextSource" />
				<constructor-arg value="" />
				<property name="rolePrefix" value="" />
				<property name="searchSubtree" value="false" />
				<property name="convertToUpperCase" value="false" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="userDetailsContextMapper"
		class="org.springframework.security.userdetails.ldap.ReplacingUserDetailsMapper"
		p:accountMapper-ref="accountMapper"
		p:userDetailsService-ref="userAccountDao">
	</bean>

</beans>
