<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <!-- UsernameSource: HTTP request parameter "username" -->
    <!-- HTTP request parameter can be modified by the user, which is not very secure. For additional protection RequestParameterUsernameSource will: 1. Verify that POST method was used. 2. Verify that request has valid referer, if validReferers property is not empty. -->
    <bean
        id="usernameSource"
        class="org.springframework.security.ui.preauth.RequestParameterUsernameSource"
        p:usernameKey="$UsernameSource{usernameKey}">

        <property name="validReferers">
            <list>
                <value>http://server1.domain.local/login.do</value>
                <value>http://server2.domain.local/login.do</value>
            </list>
        </property>
    </bean>

    <bean
        id="propertyConfigurerUsernameSource"
        class="com.archibus.utility.LoggingPropertyPlaceholderConfigurer"
        p:placeholderPrefix="$UsernameSource{">
        <property name="locations">
            <list>
                <value>
                    classpath:config/context/security/preauth/username-source/request-parameter/username-source.properties
                </value>
            </list>
        </property>
    </bean>
</beans>
