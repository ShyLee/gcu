<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <!-- ========================= Filter Chain definition: Remoting: Webservices CXF ========================= -->
    <bean id="springSecurityFilterChainRemoting" class="org.springframework.security.util.FilterChainProxy">
        <security:filter-chain-map path-type="ant">
            <!-- Remoting: stateful WebServices; 
                httpSessionContextIntegrationFilter creates SecurityContext 
                and populates it with information obtained from the HttpSession. contextFilter supplies Context with 
                the current project for the current HttpSession; 
                authenticatedProcessingFilter is a pre-authenticated 
                filter which obtains username and other values supplied in the request (in headers, or in cookies, or 
                in HttpServletRequest.getRemoteUser()), and creates Authentication object; 
                dummyFilter is intercepted 
                by SecurityControllerInterceptor, which creates SecurityController. The SecurityController has to be 
                created after Authentication object is created (by authenticationProcessingFilter). SecurityController 
                checks if user is authenticated. -->
            <security:filter-chain pattern="/cxf/**"
                filters="httpSessionContextIntegrationFilter,contextFilter,authenticationProcessingFilter,dummyFilter"/>
        </security:filter-chain-map>
    </bean>

</beans>
